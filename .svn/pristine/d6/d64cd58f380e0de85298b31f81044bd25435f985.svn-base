//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NexGen.svManageUploadFile {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="svManageUploadFile.IsvUploadFile")]
    public interface IsvUploadFile {
        
        // CODEGEN: Generating message contract since the wrapper name (DownloadRequest) of message DownloadRequest does not match the default value (DownloadFile)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsvUploadFile/DownloadFile", ReplyAction="http://tempuri.org/IsvUploadFile/DownloadFileResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NexGen.svManageUploadFile.RemoteFileInfo DownloadFile(NexGen.svManageUploadFile.DownloadRequest request);
        
        // CODEGEN: Generating message contract since the operation UploadFile is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsvUploadFile/UploadFile", ReplyAction="http://tempuri.org/IsvUploadFile/UploadFileResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NexGen.svManageUploadFile.UploadFileResponse UploadFile(NexGen.svManageUploadFile.RemoteFileInfo request);
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/NexGenService")]
    public enum FolderTypes {
        
        /// <remarks/>
        Undefine = 1,
        
        /// <remarks/>
        IMG = 2,
        
        /// <remarks/>
        OCR = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FolderName;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public NexGen.svManageUploadFile.FolderTypes FolderType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FileName;
        
        public DownloadRequest() {
        }
        
        public DownloadRequest(string FolderName, NexGen.svManageUploadFile.FolderTypes FolderType, string FileName) {
            this.FolderName = FolderName;
            this.FolderType = FolderType;
            this.FileName = FileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoteFileInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RemoteFileInfo {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FileName;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FolderName;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public NexGen.svManageUploadFile.FolderTypes FolderType;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public long Length;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileByteStream;
        
        public RemoteFileInfo() {
        }
        
        public RemoteFileInfo(string FileName, string FolderName, NexGen.svManageUploadFile.FolderTypes FolderType, long Length, System.IO.Stream FileByteStream) {
            this.FileName = FileName;
            this.FolderName = FolderName;
            this.FolderType = FolderType;
            this.Length = Length;
            this.FileByteStream = FileByteStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadFileResponse {
        
        public UploadFileResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IsvUploadFileChannel : NexGen.svManageUploadFile.IsvUploadFile, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsvUploadFileClient : System.ServiceModel.ClientBase<NexGen.svManageUploadFile.IsvUploadFile>, NexGen.svManageUploadFile.IsvUploadFile {
        
        public IsvUploadFileClient() {
        }
        
        public IsvUploadFileClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IsvUploadFileClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IsvUploadFileClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IsvUploadFileClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NexGen.svManageUploadFile.RemoteFileInfo NexGen.svManageUploadFile.IsvUploadFile.DownloadFile(NexGen.svManageUploadFile.DownloadRequest request) {
            return base.Channel.DownloadFile(request);
        }
        
        public long DownloadFile(ref string FolderName, ref NexGen.svManageUploadFile.FolderTypes FolderType, ref string FileName, out System.IO.Stream FileByteStream) {
            NexGen.svManageUploadFile.DownloadRequest inValue = new NexGen.svManageUploadFile.DownloadRequest();
            inValue.FolderName = FolderName;
            inValue.FolderType = FolderType;
            inValue.FileName = FileName;
            NexGen.svManageUploadFile.RemoteFileInfo retVal = ((NexGen.svManageUploadFile.IsvUploadFile)(this)).DownloadFile(inValue);
            FileName = retVal.FileName;
            FolderName = retVal.FolderName;
            FolderType = retVal.FolderType;
            FileByteStream = retVal.FileByteStream;
            return retVal.Length;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NexGen.svManageUploadFile.UploadFileResponse NexGen.svManageUploadFile.IsvUploadFile.UploadFile(NexGen.svManageUploadFile.RemoteFileInfo request) {
            return base.Channel.UploadFile(request);
        }
        
        public void UploadFile(string FileName, string FolderName, NexGen.svManageUploadFile.FolderTypes FolderType, long Length, System.IO.Stream FileByteStream) {
            NexGen.svManageUploadFile.RemoteFileInfo inValue = new NexGen.svManageUploadFile.RemoteFileInfo();
            inValue.FileName = FileName;
            inValue.FolderName = FolderName;
            inValue.FolderType = FolderType;
            inValue.Length = Length;
            inValue.FileByteStream = FileByteStream;
            NexGen.svManageUploadFile.UploadFileResponse retVal = ((NexGen.svManageUploadFile.IsvUploadFile)(this)).UploadFile(inValue);
        }
    }
}
